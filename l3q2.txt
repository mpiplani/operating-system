Ans.    
import java.util.Scanner;
 class FCFS 
{ 
   public static void sort(String[] process,int[] arrival_time,int[] burst_time) 
   {   
     String temp_process;  
      int temp;   
     for(int i=0;i<process.length;i++) 
      {    for(int j=0;j<process.length-1;j++)   
             {    
                if(arrival_time[j]>arrival_time[j+1])  
                 {     
                      temp_process=process[j];  
                      process[j]=process[j+1];    
                      process[j+1]=temp_process;     
                      temp=burst_time[j];     
                       burst_time[j]=burst_time[j+1];   
                       burst_time[j+1]=temp;     
                        temp=arrival_time[j];   
                       arrival_time[j]=arrival_time[j+1];  
                       arrival_time[j+1]=temp;     
                 }   
            }  
     }
  } 
 public static void main(String args[])  
  {  
    String process[];
   int burst_time[];  
    int arrival_time[];  
    int turnaround_time[]; 
    Scanner sc=new Scanner(System.in);  
    System.out.println("Enter number of process");  
     int p=sc.nextInt();  
     process=new String[p];   
     arrival_time=new int[p];   
     burst_time=new int[p];   
     turnaround_time=new int[p];  
      for(int i=0;i<p;i++)    
       process[i]=sc.next();   
      System.out.println("Enter arrival time");  
       for(int i=0;i<p;i++)   
        arrival_time[i]=sc.nextInt();  
       System.out.println("Enter burst time"); 
        for(int i=0;i<p;i++)   
       burst_time[i]=sc.nextInt();  
      int waiting_time[]=new int[p];  
      sort(process,arrival_time,burst_time);   
      waiting_time[0]=0;    
      int total_time=arrival_time[0]+burst_time[0];  
      turnaround_time[0]=waiting_time[0]+burst_time[0];  
      for(int i=1;i<process.length;i++)  
      {   
         waiting_time[i]=(total_time-arrival_time[i])>0 ? total_time-arrival_time[i] : 0;   
         total_time=total_time+burst_time[i]+((arrival_time[i]>total_time) ? arrival_time[i]total_time : 0); 
         turnaround_time[i]=waiting_time[i]+burst_time[i]; 
  
       }  

       display(process,arrival_time,burst_time,waiting_time,turnaround_time);  
    }    
     public static void display(String[] process,int arrival_time[],int burst_time[],int waiting_time[],int turnaround_time[])  
     {   
        for(int i=0;i<process.length;i++) 
          {    
              System.out.print(process[i]+"\t"+arrival_time[i]+"\t"+burst_time[i]+"\t"+waiting_time[i]+"\t"+turnaround_tim e[i]);   
               System.out.println();  
          }
     }
 }   